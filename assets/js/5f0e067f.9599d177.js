"use strict";(self.webpackChunkbee_js_docs=self.webpackChunkbee_js_docs||[]).push([[9798],{5422:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"documentation/staking","title":"Staking","description":"Operating a Bee full node and staking BZZ makes you eligible to participate in the redistribution game \u2014 a mechanism for earning additional BZZ through by sharing disk space with the Swarm network. This guide shows how to use bee-js to deposit stake and check your node\'s staking status.","source":"@site/docs/documentation/staking.md","sourceDirName":"documentation","slug":"/staking","permalink":"/docs/staking","draft":false,"unlisted":false,"editUrl":"https://github.com/ethersphere/bee-js-docs/docs/documentation/staking.md","tags":[],"version":"current","frontMatter":{"title":"Staking","id":"staking","slug":"/staking","sidebar_label":"Staking"},"sidebar":"Balls","previous":{"title":"Pinning","permalink":"/docs/pinning"},"next":{"title":"PSS","permalink":"/docs/pss"}}');var i=t(4848),a=t(8453);const o={title:"Staking",id:"staking",slug:"/staking",sidebar_label:"Staking"},r=void 0,c={},d=[{value:"Stake BZZ",id:"stake-bzz",level:2},{value:"Check Staking Status",id:"check-staking-status",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Operating a Bee full node and staking BZZ makes you eligible to participate in the redistribution game \u2014 a mechanism for earning additional BZZ through by sharing disk space with the Swarm network. This guide shows how to use ",(0,i.jsx)(n.code,{children:"bee-js"})," to deposit stake and check your node's staking status."]}),"\n",(0,i.jsx)(n.admonition,{type:"danger",children:(0,i.jsxs)(n.p,{children:["\u26a0\ufe0f ",(0,i.jsx)(n.strong,{children:"Important:"})," Staked BZZ is ",(0,i.jsx)(n.strong,{children:"non-refundable"})," \u2014 once deposited, it ",(0,i.jsx)(n.strong,{children:"cannot be withdrawn"}),"."]})}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["Currently, ",(0,i.jsx)(n.code,{children:"bee-js"})," supports depositing stake and checking staking status, but does ",(0,i.jsx)(n.strong,{children:"not yet support"})," advanced features like ",(0,i.jsx)(n.a,{href:"https://docs.ethswarm.org/docs/bee/working-with-bee/staking#partial-stake-withdrawals",children:"partial stake withdrawals"})," or ",(0,i.jsx)(n.a,{href:"https://docs.ethswarm.org/docs/bee/working-with-bee/staking#reserve-doubling",children:"reserve doubling"}),"."]}),(0,i.jsxs)(n.p,{children:["For a complete guide to the requirements and configuration for staking, refer to the ",(0,i.jsx)(n.a,{href:"https://docs.ethswarm.org/docs/bee/working-with-bee/staking",children:"Bee documentation"}),"."]})]}),"\n",(0,i.jsx)(n.h2,{id:"stake-bzz",children:"Stake BZZ"}),"\n",(0,i.jsxs)(n.p,{children:["To stake, use the ",(0,i.jsx)(n.code,{children:"depositStake"})," method provided by ",(0,i.jsx)(n.code,{children:"bee-js"}),". It accepts a value in PLUR, the smallest unit of BZZ (like wei in Ethereum). The ",(0,i.jsx)(n.code,{children:"BZZ"})," utility class simplifies conversion from decimal string to PLUR."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"import { Bee, BZZ } from '@ethersphere/bee-js'\n\nconst bee = new Bee('http://localhost:1633')\n\nasync function main() {\n\n  // Convert 10 BZZ to PLUR\n  const amount = BZZ.fromDecimalString('10')\n\n  const txHash = await bee.depositStake(amount)\n  console.log('Stake deposited. Transaction hash:', txHash.toHex())\n}\n\nmain().catch(console.error)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Example output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"Stake deposited. Transaction hash: e1b86eebc54b465d84ab278da94a387e9786076557ab8f3fe04ba1b52dc065c8\n"})}),"\n",(0,i.jsxs)(n.p,{children:["A successful staking transaction will return the transaction hash which you can look up on a blockchain explorer like ",(0,i.jsx)(n.a,{href:"https://gnosisscan.io/tx/0xe1b86eebc54b465d84ab278da94a387e9786076557ab8f3fe04ba1b52dc065c8",children:"Gnosisscan"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"check-staking-status",children:"Check Staking Status"}),"\n",(0,i.jsx)(n.p,{children:"After staking, you can confirm the deposited amount and monitor your node\u2019s participation in the redistribution game:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"import { Bee } from '@ethersphere/bee-js'\n\nconst bee = new Bee('http://localhost:1633')\n\nasync function main() {\n  const stake = await bee.getStake()\n  const redistributionState = await bee.getRedistributionState()\n\n  console.log('Current staked amount:', stake.toDecimalString(), 'BZZ')\n  console.log('\\nRedistribution State:')\n  console.log(JSON.stringify(redistributionState, null, 2))\n}\n\nmain().catch(console.error)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Example output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'Current staked amount: 10.0000000000000001 BZZ\n\nRedistribution State:\n{\n  "minimumGasFunds": {\n    "state": "274506772500000"\n  },\n  "hasSufficientFunds": true,\n  "isFrozen": false,\n  "isFullySynced": true,\n  "phase": "claim",\n  "round": 261311,\n  "lastWonRound": 0,\n  "lastPlayedRound": 0,\n  "lastFrozenRound": 0,\n  "lastSelectedRound": 0,\n  "lastSampleDurationSeconds": 0,\n  "block": 39719372,\n  "reward": {\n    "state": "0"\n  },\n  "fees": {\n    "state": "0"\n  },\n  "isHealthy": true\n} \n'})}),"\n",(0,i.jsxs)(n.p,{children:["For details on interpreting these values, refer to the ",(0,i.jsx)(n.a,{href:"https://docs.ethswarm.org/docs/bee/working-with-bee/staking#check-status",children:"staking status section"})," of the Bee documentation."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var s=t(6540);const i={},a=s.createContext(i);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);
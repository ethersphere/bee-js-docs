"use strict";(self.webpackChunkbee_js_docs=self.webpackChunkbee_js_docs||[]).push([[87],{1470:(e,t,a)=>{a.d(t,{A:()=>N});var n=a(8168),r=a(6540),o=a(53),l=a(3104),i=a(6347),s=a(7485),u=a(1682),d=a(9466);function c(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function p(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??c(a);return function(e){const t=(0,u.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function g(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.W6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function m(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,o=p(e),[l,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!g({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[s,u]=f({queryString:a,groupId:n}),[c,m]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,d.Dv)(a);return[n,(0,r.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:n}),y=(()=>{const e=s??c;return g({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{y&&i(y)}),[y]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!g({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),m(e)}),[u,m,o]),tabValues:o}}var y=a(2303);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:a,selectedValue:i,selectValue:s,tabValues:u}=e;const d=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.a_)(),p=e=>{const t=e.currentTarget,a=d.indexOf(t),n=u[a].value;n!==i&&(c(t),s(n))},g=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const a=d.indexOf(e.currentTarget)+1;t=d[a]??d[0];break}case"ArrowLeft":{const a=d.indexOf(e.currentTarget)-1;t=d[a]??d[d.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.A)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>d.push(e),onKeyDown:g,onClick:p},l,{className:(0,o.A)("tabs__item",h.tabItem,l?.className,{"tabs__item--active":i===t})}),a??t)})))}function w(e){let{lazy:t,children:a,selectedValue:n}=e;if(a=Array.isArray(a)?a:[a],t){const e=a.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function v(e){const t=m(e);return r.createElement("div",{className:(0,o.A)("tabs-container",h.tabList)},r.createElement(b,(0,n.A)({},e,t)),r.createElement(w,(0,n.A)({},e,t)))}function N(e){const t=(0,y.A)();return r.createElement(v,(0,n.A)({key:String(t)},e))}},5680:(e,t,a)=>{a.d(t,{xA:()=>d,yg:()=>f});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=u(a),g=r,f=c["".concat(s,".").concat(g)]||c[g]||p[g]||o;return a?n.createElement(f,l(l({ref:t},d),{},{components:a})):n.createElement(f,l({ref:t},d))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=g;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},7923:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var n=a(8168),r=(a(6540),a(5680));a(1470),a(9365);const o={title:"Upload and Download",id:"upload-download",slug:"/upload-download",sidebar_label:"Upload and Download"},l=void 0,i={unversionedId:"documentation/upload-download",id:"documentation/upload-download",title:"Upload and Download",description:"\x3c!--",source:"@site/docs/documentation/upload-download.md",sourceDirName:"documentation",slug:"/upload-download",permalink:"/docs/upload-download",draft:!1,editUrl:"https://github.com/ethersphere/bee-js-docs/docs/documentation/upload-download.md",tags:[],version:"current",frontMatter:{title:"Upload and Download",id:"upload-download",slug:"/upload-download",sidebar_label:"Upload and Download"},sidebar:"Balls",previous:{title:"Buying Storage",permalink:"/docs/storage"},next:{title:"Utility Classes",permalink:"/docs/utilities"}},s={},u=[{value:"Requirements",id:"requirements",level:2},{value:"Uploading",id:"uploading",level:2},{value:"Upload Data",id:"upload-data",level:3},{value:"Upload Single file",id:"upload-single-file",level:3},{value:"Files and Directories",id:"files-and-directories",level:3}],d={toc:u},c="wrapper";function p(e){let{components:t,...a}=e;return(0,r.yg)(c,(0,n.A)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"Uploading your data to Swarm is easy with ",(0,r.yg)("inlineCode",{parentName:"p"},"bee-js"),". Based on your needs you can either upload directly unstructured data, single file or even complex directories. Let's walk through the options one by one."),(0,r.yg)("h2",{id:"requirements"},"Requirements"),(0,r.yg)("p",null,"To use the example scripts below, you need:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"An instance of ",(0,r.yg)("inlineCode",{parentName:"li"},"bee-js"),"'s ",(0,r.yg)("inlineCode",{parentName:"li"},"Bee")," ",(0,r.yg)("a",{parentName:"li",href:"/docs/getting-started/"},"initialized")," as ",(0,r.yg)("inlineCode",{parentName:"li"},"bee")," using the API endpoint of a currently operating Bee node."),(0,r.yg)("li",{parentName:"ul"},"(Uploads only) The batch ID of a previously purchased usable postage batch with enough ",(0,r.yg)("inlineCode",{parentName:"li"},"remainingSize")," left to upload the desired data. If you don't have one already, you will need to ",(0,r.yg)("a",{parentName:"li",href:"/docs/storage/#purchasing-storage"},"buy a batch")," to upload data. If you do have one, you will need to ",(0,r.yg)("a",{parentName:"li",href:"/docs/storage/#selecting-a-batch"},"get and save")," its batch ID.")),(0,r.yg)("h2",{id:"uploading"},"Uploading"),(0,r.yg)("p",null,"The examples below assume you already have an instance of the ",(0,r.yg)("inlineCode",{parentName:"p"},"Bee")," class ",(0,r.yg)("a",{parentName:"p",href:"/docs/getting-started/"},"initialized")," as ",(0,r.yg)("inlineCode",{parentName:"p"},"bee"),", and the ",(0,r.yg)("a",{parentName:"p",href:"/docs/storage/#purchasing-storage"},"batch ID")," of a valid postage stamp batch saved as a string in ",(0,r.yg)("inlineCode",{parentName:"p"},"postageBatchId"),"."),(0,r.yg)("h3",{id:"upload-data"},"Upload Data"),(0,r.yg)("p",null,"You can upload and retrieve any ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"Uint8Array")," data with the ",(0,r.yg)("inlineCode",{parentName:"p"},"uploadData")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"downloadData")," functions."),(0,r.yg)("p",null,"When you download data the return type is the ",(0,r.yg)("inlineCode",{parentName:"p"},"Data")," interface which extends ",(0,r.yg)("inlineCode",{parentName:"p"},"Uint8Array")," with convenience functions like:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"text()")," that converts the bytes into UTF-8 encoded string"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"hex()")," that converts the bytes into ",(0,r.yg)("strong",{parentName:"li"},"non-prefixed")," hex string"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"json()")," that converts the bytes into JSON object")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"const result = await bee.uploadData(postageBatchId, \"Bee is awesome!\")\n\n// prints Swarm hash of the file with which it can be retrieved\n// here it is fd79d5e0ebd8407e422f53ce1d7c4c41ebf403be55143900f8d1490560294780\nconsole.log(result.reference) \n\nconst retrievedData = await bee.downloadData(result.reference)\n\nconsole.log(retrievedData.text()) // prints 'Bee is awesome!'\n")),(0,r.yg)("admonition",{title:"Tip",type:"info"},(0,r.yg)("p",{parentName:"admonition"},"A Swarm reference or hash is a 64 character long hex string which is the address of the uploaded data, file, or directory. It must saved so it can be used later to retrieve the uploaded content.")),(0,r.yg)("h3",{id:"upload-single-file"},"Upload Single file"),(0,r.yg)("p",null,"You can also upload files by specifying a filename. When you download the file, ",(0,r.yg)("inlineCode",{parentName:"p"},"bee-js")," will return additional information like the ",(0,r.yg)("inlineCode",{parentName:"p"},"contentType")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"name")," of the file."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"const result = await bee.uploadFile(postageBatchId, \"Bee is awesome!\", \"textfile.txt\")\nconst retrievedFile = await bee.downloadFile(result.reference)\n\nconsole.log(retrievedFile.name) // prints 'textfile.txt'\nconsole.log(retrievedFile.contentType) // prints 'application/octet-stream'\nconsole.log(retrievedFile.data.text()) // prints 'Bee is awesome!'\n")),(0,r.yg)("p",null,"In browsers, you can directly upload using the ",(0,r.yg)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/File"},(0,r.yg)("inlineCode",{parentName:"a"},"File")," interface"),". The filename is taken from the ",(0,r.yg)("inlineCode",{parentName:"p"},"File")," object itself, but can be overwritten through the second argument of the ",(0,r.yg)("inlineCode",{parentName:"p"},"uploadFile")," function."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'const file = new File(["foo"], "foo.txt", { type: "text/plain" })\n\nconst postageBatchId = await bee.createPostageBatch("100", 17)\nconst result = await bee.uploadFile(postageBatchId, file)\nconst retrievedFile = await bee.downloadFile(result.reference)\n\nconsole.log(retrievedFile.name) // prints \'foo.txt\'\nconsole.log(retrievedFile.contentType) // prints \'text/plain\'\nconsole.log(retrievedFile.data.text()) // prints \'foo\'\n')),(0,r.yg)("h3",{id:"files-and-directories"},"Files and Directories"),(0,r.yg)("p",null,"In browsers, you can easily upload an array of ",(0,r.yg)("inlineCode",{parentName:"p"},"File")," objects coming from your form directly with ",(0,r.yg)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/FileList"},(0,r.yg)("inlineCode",{parentName:"a"},"FileList")),". If the files uploaded through ",(0,r.yg)("inlineCode",{parentName:"p"},"uploadFiles")," have a relative path, they are added relative to this filepath. Otherwise, the whole structure is flattened into single directory."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'const foo = new File(["foo"], "foo.txt", { type: "text/plain" })\nconst bar = new File(["bar"], "bar.txt", { type: "text/plain" })\n\nconst postageBatchId = await bee.createPostageBatch("100", 17)\nconst result = await bee.uploadFiles(postageBatchId, [ foo, bar ]) // upload\n\nconst rFoo = await bee.downloadFile(result.reference, \'./foo.txt\') // download foo\nconst rBar = await bee.downloadFile(result.reference, \'./bar.txt\') // download bar\n\nconsole.log(rFoo.data.text()) // prints \'foo\'\nconsole.log(rBar.data.text()) // prints \'bar\'\n')),(0,r.yg)("p",null,"In NodeJS, you may utilize the ",(0,r.yg)("inlineCode",{parentName:"p"},"uploadFilesFromDirectory")," function, which takes the directory path as input and uploads all files in that directory. Let's assume we have the following file structure:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},".\n+-- foo.txt\n+-- dir\n|   +-- bar.txt\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"const postageBatchId = await bee.createPostageBatch(\"100\", 17)\n\nconst result = await bee.uploadFilesFromDirectory(postageBatchId, './') // upload recursively current folder\n\nconst rFoo = await bee.downloadFile(result.reference, './foo.txt') // download foo\nconst rBar = await bee.downloadFile(result.reference, './dir/bar.txt') // download bar\n\nconsole.log(rFoo.data.text()) // prints 'foo'\nconsole.log(rBar.data.text()) // prints 'bar'\n")))}p.isMDXComponent=!0},9365:(e,t,a)=>{a.d(t,{A:()=>l});var n=a(6540),r=a(53);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:a,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,l),hidden:a},t)}}}]);
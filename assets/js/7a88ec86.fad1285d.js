(self.webpackChunkbee_js_docs=self.webpackChunkbee_js_docs||[]).push([[6688],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return l},kt:function(){return d}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=s(r),d=i,y=u["".concat(p,".").concat(d)]||u[d]||f[d]||a;return r?n.createElement(y,o(o({ref:t},l),{},{components:r})):n.createElement(y,o({ref:t},l))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=u;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var s=2;s<a;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},3706:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return s},default:function(){return f}});var n=r(2122),i=r(9756),a=(r(7294),r(3905)),o={id:"reference",title:"Type alias: Reference",sidebar_label:"Reference",sidebar_position:0,custom_edit_url:null},c=void 0,p={unversionedId:"api/types/reference",id:"api/types/reference",isDocsHomePage:!1,title:"Type alias: Reference",description:"\u01ac Reference: HexString \\| HexString",source:"@site/docs/api/types/reference.md",sourceDirName:"api/types",slug:"/api/types/reference",permalink:"/docs/api/types/reference",editUrl:null,version:"current",sidebarPosition:0,frontMatter:{id:"reference",title:"Type alias: Reference",sidebar_label:"Reference",sidebar_position:0,custom_edit_url:null},sidebar:"Balls",previous:{title:"Readable",permalink:"/docs/api/types/readable"},next:{title:"Signature",permalink:"/docs/api/types/signature"}},s=[],l={toc:s};function f(e){var t=e.components,r=(0,i.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u01ac ",(0,a.kt)("strong",{parentName:"p"},"Reference"),": ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/types/utils.hexstring"},(0,a.kt)("inlineCode",{parentName:"a"},"HexString")),"<typeof ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/variables/reference_hex_length"},(0,a.kt)("inlineCode",{parentName:"a"},"REFERENCE_HEX_LENGTH")),">"," ","|"," ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/types/utils.hexstring"},(0,a.kt)("inlineCode",{parentName:"a"},"HexString")),"<typeof ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/variables/encrypted_reference_hex_length"},(0,a.kt)("inlineCode",{parentName:"a"},"ENCRYPTED_REFERENCE_HEX_LENGTH")),">"),(0,a.kt)("p",null,"Generic reference that can be either non-encrypted reference which is a hex string of length 64 or encrypted\nreference which is a hex string of length 128."),(0,a.kt)("p",null,"Encrypted reference consists of two parts. The reference address itself (like non-encrypted reference) and decryption key."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"see"))," ",(0,a.kt)("a",{parentName:"p",href:"https://docs.ethswarm.org/docs/access-the-swarm/store-with-encryption"},"Bee docs - Store with Encryption")),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/ethersphere/bee-js/blob/b8d1a20/src/types/index.ts#L53"},"bee-js/src/types/index.ts:53")))}f.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkbee_js_docs=self.webpackChunkbee_js_docs||[]).push([[4160],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=n.createContext({}),s=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(a),m=r,h=p["".concat(u,".").concat(m)]||p[m]||d[m]||o;return a?n.createElement(h,i(i({ref:t},c),{},{components:a})):n.createElement(h,i({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},2360:function(e,t,a){a.d(t,{Z:function(){return i}});var n=a(7294),r=a(6010),o="tabItem_OmH5";function i(e){var t=e.children,a=e.hidden,i=e.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:a},t)}},9877:function(e,t,a){a.d(t,{Z:function(){return m}});var n=a(7462),r=a(7294),o=a(2389),i=a(7392),l=a(7094),u=a(2466),s=a(6010),c="tabList_uSqn",d="tabItem_LplD";function p(e){var t,a,o,p=e.lazy,m=e.block,h=e.defaultValue,f=e.values,g=e.groupId,v=e.className,k=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=f?f:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),w=(0,i.l)(b,(function(e,t){return e.value===t.value}));if(w.length>0)throw new Error('Docusaurus error: Duplicate values "'+w.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===h?h:null!=(t=null!=h?h:null==(a=k.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(o=k[0])?void 0:o.props.value;if(null!==y&&!b.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,l.U)(),T=N.tabGroupChoices,O=N.setTabGroupChoices,C=(0,r.useState)(y),j=C[0],E=C[1],x=[],I=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var S=T[g];null!=S&&S!==j&&b.some((function(e){return e.value===S}))&&E(S)}var D=function(e){var t=e.currentTarget,a=x.indexOf(t),n=b[a].value;n!==j&&(I(t),E(n),null!=g&&O(g,n))},P=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=x.indexOf(e.currentTarget)+1;a=x[n]||x[0];break;case"ArrowLeft":var r=x.indexOf(e.currentTarget)-1;a=x[r]||x[x.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,s.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":m},v)},b.map((function(e){var t=e.value,a=e.label,o=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:j===t?0:-1,"aria-selected":j===t,key:t,ref:function(e){return x.push(e)},onKeyDown:P,onFocus:D,onClick:D},o,{className:(0,s.Z)("tabs__item",d,null==o?void 0:o.className,{"tabs__item--active":j===t})}),null!=a?a:t)}))),p?(0,r.cloneElement)(k.filter((function(e){return e.props.value===j}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},k.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==j})}))))}function m(e){var t=(0,o.Z)();return r.createElement(p,(0,n.Z)({key:String(t)},e))}},1663:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return d}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),i=(a(9877),a(2360),["components"]),l={title:"Track Upload Status",id:"track-upload",slug:"/track-upload",sidebar_label:"Track Upload"},u=void 0,s={unversionedId:"user-documentation/track-upload",id:"user-documentation/track-upload",title:"Track Upload Status",description:"In Swarm, an instruction to upload data to the network goes through 3 consecutive stages before it is completed:",source:"@site/docs/user-documentation/track-upload.md",sourceDirName:"user-documentation",slug:"/track-upload",permalink:"/docs/track-upload",draft:!1,editUrl:"https://github.com/ethersphere/bee-js-docs",tags:[],version:"current",frontMatter:{title:"Track Upload Status",id:"track-upload",slug:"/track-upload",sidebar_label:"Track Upload"},sidebar:"Balls",previous:{title:"Upload and Download",permalink:"/docs/upload-download"},next:{title:"Postal Service over Swarm",permalink:"/docs/pss"}},c={},d=[{value:"What is a tag",id:"what-is-a-tag",level:2},{value:"Create tag",id:"create-tag",level:2},{value:"Upload with tag",id:"upload-with-tag",level:2},{value:"Retrieve tag",id:"retrieve-tag",level:2}],p={toc:d};function m(e){var t=e.components,a=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In Swarm, an instruction to upload data to the network goes through 3 consecutive stages before it is completed:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Splitting"),(0,o.kt)("li",{parentName:"ul"},"Storing"),(0,o.kt)("li",{parentName:"ul"},"Sending")),(0,o.kt)("p",null,"In the splitting state, the file is deconstructed in chunks (Swarms canonical data unit) and packaged in a ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Merkle_tree"},"Binary Merkle Tree"),". After splitting, the chunks are stored in your local database where they enter a queue, to be sent to the network."),(0,o.kt)("p",null,"Sending starts immediately when the first chunks are split and stored. After the chunk is sent, your node will receive a receipt from the node that has stored the chunk, marking the completion of the upload for that chunk. After a receipt has been received for all chunks, the upload is complete."),(0,o.kt)("h2",{id:"what-is-a-tag"},"What is a tag"),(0,o.kt)("p",null,"The status of your upload can be followed by using ",(0,o.kt)("inlineCode",{parentName:"p"},"tags"),". A ",(0,o.kt)("inlineCode",{parentName:"p"},"tag")," is a label given to all chunks that belong to the same upload instruction. In the ",(0,o.kt)("inlineCode",{parentName:"p"},"bee-js")," library, tag looks as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"interface Tag {\n  total: number     // the total number of chunks for upload(s) related with this tag\n  processed: number // the total number of chunks stored and queued for sending\n  synced: number    // the total number of chunks that are synced with the network \n\n  uid: number       // a unique identifier for this tag\n  startedAt: string // when the tag was first used\n}\n")),(0,o.kt)("h2",{id:"create-tag"},"Create tag"),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Tags are automatically created on most upload methods and are returned using the ",(0,o.kt)("inlineCode",{parentName:"p"},"UploadResult")," interface, so\nyou don't have to create them manually most of the time. "))),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"Forbidden on Gateways")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you are using a node that is in Gateway mode then this operation is not allowed!"))),(0,o.kt)("p",null,"Creating a tag is easy. Just use the ",(0,o.kt)("inlineCode",{parentName:"p"},"createTag")," function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const tag = await bee.createTag()\n")),(0,o.kt)("h2",{id:"upload-with-tag"},"Upload with tag"),(0,o.kt)("p",null,"You can then use the tag when uploading data, by providing it in the options arguments for each of these methods."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const postageBatchId = getOrCreatePostageBatch()\n\nawait bee.uploadData(postageBatchId, "Bee is awesome!", { tag })\n// OR\nawait bee.uploadFile(postageBatchId, file, "foo.txt", { tag })\n// OR\nawait bee.uploadFiles(postageBatchId, files, { tag })\n// OR\nawait bee.uploadFilesFromDirectory(postageBatchId, "./", { tag })\n')),(0,o.kt)("h2",{id:"retrieve-tag"},"Retrieve tag"),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"Forbidden on Gateways")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you are using a node that is in Gateway mode then this operation is not allowed!"))),(0,o.kt)("p",null,"Each time you want to check the upload status, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"retrieveTag")," function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const updatedTag = await bee.retrieveTag(tag)\n// OR\nconst updatedTag = await bee.retrieveTag(tag.uid)\n")))}m.isMDXComponent=!0}}]);